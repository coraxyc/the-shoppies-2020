{"version":3,"sources":["components/Card.react.js","components/Dropdown.react.js","components/Searchbar.react.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","isBold","title","children","Dropdown","addNominatedMovie","data","error","isNominateDisabled","useState","Array","length","fill","listOfHovering","setListOfHovering","map","movie","index","key","id","onMouseEnter","modifiedListOfHovering","handleMouseEnter","onMouseLeave","handleMouseLeave","onClick","year","disabled","Searchbar","isDropdownOpen","setIsDropdownOpen","node","useRef","handleClick","e","current","contains","target","isSearchQueryMinLength","useEffect","document","addEventListener","removeEventListener","ref","type","onChange","event","setSearchQuery","value","placeholder","App","setData","setError","searchQuery","nominations","setNominations","setIsSearchQueryMinLength","isSearchQueryContainedInData","setIsSearchQueryContainedInData","filter","toLowerCase","includes","fetch","process","then","response","json","Response","Error","info","Search","reduce","acc","Title","Year","imdbID","sort","movie1","movie2","catch","message","alert","nominatedMovie","movieToRemove","undefined","id1","updatedMovies","existingMovie","removeNominatedMovie","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"+TAceA,MAXf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACZD,EAAME,OAAS,2BAAIF,EAAMG,OAAaH,EAAMG,OAE9CH,EAAMI,W,YC8CEC,MAnDf,SAAkBL,GAChB,IAAMM,EAAoBN,EAAMM,kBAC1BC,EAAOP,EAAMO,KACbC,EAAQR,EAAMQ,MACdC,EAAqBT,EAAMS,mBAJV,EAMqBC,mBAAS,IAAIC,MAAMJ,EAAKK,QAAQC,MAAK,IAN1D,mBAMhBC,EANgB,KAMAC,EANA,KAqBvB,OACE,yBAAKd,UAAU,YACZM,EAAKK,OAAS,EACX,yBAAKX,UAAU,iBAAf,OACGM,QADH,IACGA,OADH,EACGA,EAAMS,KAAI,SAACC,EAAOC,GAAR,OACT,yBACEjB,UAAU,eACVkB,IAAKF,EAAMG,GACXC,aAAc,kBArBH,SAACH,GACxB,IAAII,EAAyB,GAC7BA,EAAuBT,MAAK,GAC5BS,EAAuBJ,IAAS,EAChCH,EAAkBO,GAiBcC,CAAiBL,IACrCM,aAAc,kBAfH,WACvB,IAAIF,EAAyB,GAC7BA,EAAuBT,MAAK,GAC5BE,EAAkBO,GAYcG,IACpBC,QAAS,kBAAMpB,EAAkBW,KALnC,UAOMA,EAAMd,MAPZ,aAOsBc,EAAMU,KAP5B,KAQGb,EAAeI,IACd,4BACEQ,QAAS,kBAAMpB,EAAkBW,IACjCW,SAAUnB,EAAmBQ,IAF/B,iBASR,yBAAKhB,UAAU,kBACZO,GAAgB,iECAdqB,MA5Cf,SAAmB7B,GAAQ,IAAD,EACoBU,oBAAS,GAD7B,mBACjBoB,EADiB,KACDC,EADC,KAElBC,EAAOC,mBAEPC,EAAc,SAACC,GACnBJ,EAAkBC,EAAKI,QAAQC,SAASF,EAAEG,SAAWtC,EAAMuC,yBAY7D,OATAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,YAAaR,GACvCO,SAASC,iBAAiB,UAAWR,GAC9B,WACLO,SAASE,oBAAoB,YAAaT,GAC1CO,SAASC,iBAAiB,UAAWR,MAEtC,CAAClC,EAAMuC,yBAGR,yBAAKK,IAAKZ,GACR,yBAAK/B,UAAS,oBAAe6B,EAAiB,yBAA2B,KACvE,uBAAG7B,UAAU,iBACb,2BACE4C,KAAK,SACL5C,UAAU,kBACV6C,SAAU,SAACC,GAAD,OAAW/C,EAAMgD,eAAeD,EAAMT,OAAOW,QACvDC,YAAcpB,EAAsC,GAArB,sBAKjCA,GACE,6BACE,kBAAC,EAAD,CACExB,kBAAmBN,EAAMM,kBACzBC,KAAMP,EAAMO,KAAMC,MAAOR,EAAMQ,MAC/BC,mBAAoBT,EAAMS,wB,MC6EzB0C,MA3Gf,WAAgB,IAAD,EACWzC,mBAAS,IADpB,mBACNH,EADM,KACA6C,EADA,OAEa1C,mBAAS,MAFtB,mBAENF,EAFM,KAEC6C,EAFD,OAGyB3C,mBAAS,IAHlC,mBAGN4C,EAHM,KAGON,EAHP,OAIyBtC,mBAAS,IAJlC,mBAIN6C,EAJM,KAIOC,EAJP,OAK+C9C,oBAAS,GALxD,mBAKN6B,EALM,KAKkBkB,EALlB,OAM2D/C,oBAAS,GANpE,mBAMNgD,EANM,KAMwBC,EANxB,KA0Eb,OAlEAnB,qBAAU,WACR,GAAIc,EAAY1C,OAZE,EAgBhB,OAHAyC,EAAS,0CACTD,EAAQ,SACRK,GAA0B,GAQ5BE,EACEpD,EAAKK,OAAS,GACdL,EAAKqD,QAAO,SAAC3C,GAAD,OAAWA,EAAMd,MAAM0D,cAAcC,SAASR,EAAYO,kBAAgBjD,OAAS,GAGjG6C,GAA0B,GAC1BM,MAAM,8BAAD,OAA+BT,EAA/B,mBA9BOU,YA+BTC,MAAK,SAAAC,GAAQ,OAAIA,KACjBD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,GAA0B,UAAtBA,EAASE,SACPV,IACFL,EAASa,EAASG,OAClBjB,EAAQ,SAEL,CACL,IAAMkB,EACJJ,EAASK,OAAOC,QACd,SAACC,EAAKxD,GAAN,4BACMwD,GADN,CACW,CAAEtE,MAAOc,EAAMyD,MAAO/C,KAAMV,EAAM0D,KAAMvD,GAAIH,EAAM2D,YAC1D,IAEPN,EAAKO,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAO3E,MAAQ4E,EAAO5E,OAAS,EAAI,KACjEiD,EAAQkB,OAGXU,OAAM,YAAkB,IAAfC,EAAc,EAAdA,QACJvB,IACFL,EAAS4B,GACT7B,EAAQ,UAGb,CAACE,IAuBF,yBAAKrD,UAAU,OACb,yBAAKA,UAAU,cACb,4CACA,kBAAC,EAAD,CACEK,kBAzBkB,SAACW,GAxDD,IAyDpBsC,EAAY3C,OACdsE,MAAM,2BAAD,OA1DiB,EA0DjB,kBAEL1B,EAAe,GAAD,mBAAKD,GAAL,CAAkBtC,MAsB5BV,KAAMA,EACNC,MAAOA,EACPC,mBApBmB,SAACQ,GAAD,OACzBsC,EAAYK,QAAO,SAACuB,GAAD,OAAoBA,EAAe/D,KAAOH,EAAMG,MAAIR,OAAS,GAoB1E2B,uBAAwBA,EACxBS,eAAgBA,IAElB,yBAAK/C,UAAU,mBACb,kBAAC,EAAD,CAAME,MAAM,cAAcD,QAAQ,GAC/BqD,EAAY3C,OAAS,EAClB,4BACC2C,EAAYvC,KAAI,SAACC,GAAD,OACf,yBAAKhB,UAAU,UAAUkB,IAAKF,EAAMG,IAClC,sCAAQH,EAAMd,MAAd,aAAwBc,EAAMU,KAA9B,MACA,4BAAQD,QAAS,kBA5BN,SAAC0D,GAC5B,GAAsB,OAAlBA,QAA4CC,IAAlBD,EAA6B,CACzD,IAAME,EAAMF,EAAchE,GACpBmE,EACJhC,EAAYK,QAAO,SAAA4B,GAAa,OAAIA,EAAcpE,KAAOkE,KAC3D9B,EAAe+B,IAuBsBE,CAAqBxE,KAA5C,eAGJ,kGAlGY,EAkGZ,kBC9FIyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxD,SAASyD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpC,MAAK,SAAAqC,GACJA,EAAaC,gBAEdvB,OAAM,SAAAxE,GACLgG,QAAQhG,MAAMA,EAAMyE,c","file":"static/js/main.95b64153.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Card.css'\n\nfunction Card(props) {\n  return (\n    <div className=\"Card\">\n      <div className=\"Card_title\">\n        {props.isBold ? <b>{props.title}</b> : props.title}\n      </div>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport { useState } from 'react';\nimport '../styles/Dropdown.css'\n\nfunction Dropdown(props) {\n  const addNominatedMovie = props.addNominatedMovie;\n  const data = props.data;\n  const error = props.error;\n  const isNominateDisabled = props.isNominateDisabled;\n\n  const [listOfHovering, setListOfHovering] = useState(new Array(data.length).fill(false));\n\n  const handleMouseEnter = (index) => {\n    let modifiedListOfHovering = [];\n    modifiedListOfHovering.fill(false);\n    modifiedListOfHovering[index] = true;\n    setListOfHovering(modifiedListOfHovering);\n  };\n\n  const handleMouseLeave = () => {\n    let modifiedListOfHovering = [];\n    modifiedListOfHovering.fill(false);\n    setListOfHovering(modifiedListOfHovering);\n  };\n\n  return (\n    <div className=\"Dropdown\">\n      {data.length > 0\n        ? <div className=\"Dropdown_body\">\n            {data?.map((movie, index) =>\n              <div\n                className=\"Dropdown_row\" \n                key={movie.id} \n                onMouseEnter={() => handleMouseEnter(index)} \n                onMouseLeave={() => handleMouseLeave()}\n                onClick={() => addNominatedMovie(movie)}\n              >\n                {`${movie.title} (${movie.year})`}\n                {listOfHovering[index] && \n                  <button\n                    onClick={() => addNominatedMovie(movie)}\n                    disabled={isNominateDisabled(movie)}\n                  >\n                    Nominate\n                  </button>\n                }\n              </div>)}\n          </div>\n        : <div className=\"Dropdown_error\">\n            {error ? error : \"Couldn't find any movies for this title. Try another title.\"}\n          </div>}\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport '../styles/Searchbar.css'\nimport Dropdown from './Dropdown.react';\n\nfunction Searchbar(props) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const node = useRef();\n\n  const handleClick = (e) => {\n    setIsDropdownOpen(node.current.contains(e.target) && props.isSearchQueryMinLength);\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    document.addEventListener('keydown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n      document.addEventListener('keydown', handleClick);\n    };\n  }, [props.isSearchQueryMinLength]);\n\n  return (\n    <div ref={node}>\n      <div className={`Searchbar ${isDropdownOpen ? \"Searchbar__hasDropdown\" : \"\"}`}>\n        <i className=\"fa fa-search\" />\n        <input\n          type=\"search\"\n          className=\"Searchbar_input\"\n          onChange={(event) => props.setSearchQuery(event.target.value)}\n          placeholder={!isDropdownOpen ? \"Nominate a movie\" : \"\"}\n        />\n      </div>\n\n      {\n        isDropdownOpen && (\n          <div>\n            <Dropdown \n              addNominatedMovie={props.addNominatedMovie} \n              data={props.data} error={props.error} \n              isNominateDisabled={props.isNominateDisabled}\n            />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Searchbar;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Card from './components/Card.react';\nimport Searchbar from './components/Searchbar.react';\nimport './App.css';\n\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY;\nconst MIN_TITLE_LEN = 3;\nconst MAX_NOMINATIONS_LEN = 5;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [nominations, setNominations] = useState([]);\n  const [isSearchQueryMinLength, setIsSearchQueryMinLength] = useState(false);\n  const [isSearchQueryContainedInData, setIsSearchQueryContainedInData] = useState(false);\n\n  useEffect(() => {\n    if (searchQuery.length < MIN_TITLE_LEN) {\n      setError(\"Please search for a longer title name.\");\n      setData([]);\n      setIsSearchQueryMinLength(false);\n      return;\n    }\n\n    /* \n     * TODO: doesn't work, but check that regardless of whether error occurs, \n     * if current search query is contained in data to allow data to persist\n     */\n    setIsSearchQueryContainedInData(\n      data.length > 0 && \n      data.filter((movie) => movie.title.toLowerCase().includes(searchQuery.toLowerCase())).length > 0\n    );\n    \n    setIsSearchQueryMinLength(true);\n    fetch(`https://www.omdbapi.com/?s=${searchQuery}&apikey=${API_KEY}`)\n      .then(response => response)\n      .then(response => response.json())\n      .then(response => {\n        if (response.Response === \"False\") {\n          if(!isSearchQueryContainedInData) {\n            setError(response.Error);\n            setData([]);\n          }\n        } else {\n          const info =\n            response.Search.reduce(\n              (acc, movie) => (\n                [...acc, { title: movie.Title, year: movie.Year, id: movie.imdbID }]\n              ), []\n            );\n          info.sort((movie1, movie2) => movie1.title < movie2.title ? -1 : 1);\n          setData(info);\n        }\n      })\n      .catch(({ message }) => {\n        if(!isSearchQueryContainedInData) {\n          setError(message);\n          setData([]);\n        }\n      });\n  }, [searchQuery]);\n\n  const addNominatedMovie = (movie) => {\n    if (nominations.length === MAX_NOMINATIONS_LEN) {\n      alert(`You can only have up to ${MAX_NOMINATIONS_LEN} nominations.`)\n    } else {\n      setNominations([...nominations, movie]);\n    }\n  }\n\n  const isNominateDisabled = (movie) => \n    nominations.filter((nominatedMovie) => nominatedMovie.id === movie.id).length > 0;\n\n  const removeNominatedMovie = (movieToRemove) => {\n    if (movieToRemove !== null && movieToRemove !== undefined) {\n      const id1 = movieToRemove.id;\n      const updatedMovies =\n        nominations.filter(existingMovie => existingMovie.id !== id1);\n      setNominations(updatedMovies);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App_column\">\n        <h1>The Shoppies</h1>\n        <Searchbar\n          addNominatedMovie={addNominatedMovie} \n          data={data} \n          error={error}\n          isNominateDisabled={isNominateDisabled}\n          isSearchQueryMinLength={isSearchQueryMinLength}\n          setSearchQuery={setSearchQuery}\n        />\n        <div className=\"App_nominations\">\n          <Card title=\"Nominations\" isBold={true}>\n            {nominations.length > 0\n              ? <ul>\n                {nominations.map((movie) =>\n                  <div className=\"App_row\" key={movie.id}>\n                    <li>{`${movie.title} (${movie.year})`}</li>\n                    <button onClick={() => removeNominatedMovie(movie)}>Remove</button>\n                  </div>)}\n              </ul>\n              : <div>\n                {`You don't have any nominations yet. You can nominate up to ${MAX_NOMINATIONS_LEN} movies.`}\n              </div>\n            }\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}